name: Deploy CloudFormation Stack

on:
  push:
    branches:
      - dev
      - master
      - uat

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ vars.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set Environment According to Branch Name
        run: |
          if [ "${{ github.ref }}" == "refs/heads/dev" ]; then
            ENV="dev"
          elif [ "${{ github.ref }}" == "refs/heads/uat" ]; then
            ENV="uat"
          elif [ "${{ github.ref }}" == "refs/heads/master" ]; then
            ENV="prod"
          else
            echo "Unsupported branch. Exiting."
            exit 1
          fi
          echo "ENVIRONMENT=${ENV}" >> $GITHUB_ENV


      - name: Set Environment Parameters File
        run: |         
          PARAM_FILE="parameters/${{ env.ENVIRONMENT }}.json"
          echo "Using parameter file: ${PARAM_FILE}"

          # Verifica se o arquivo existe
          if [ ! -f "$PARAM_FILE" ]; then
            echo "Error: Parameter file ${PARAM_FILE} not found."
            exit 1
          fi

          echo "PARAM_FILE=${PARAM_FILE}" >> $GITHUB_ENV

      - name: Convert JSON to Parameter Overrides Format
        id: convert_params
        run: |
          echo "Reading parameters from file: ${PARAM_FILE}"
          cat "${PARAM_FILE}"  # Exibe o conteúdo do arquivo para depuração

          # Converte o JSON para uma lista de pares "ParameterKey=ParameterValue" sem aspas adicionais
          PARAMS=$(jq -r 'to_entries | map("\"\(.key)=\(.value|tostring)\"") | join (" ")' "${PARAM_FILE}")
  
          if [ -z "$PARAMS" ]; then
            echo "Error: No parameters found or jq conversion failed."
            exit 1
          fi
          
          PARAMS=$(sed -e 's/(/\\(/g;s/)/\\)/g' <<< $PARAMS)

          echo "Converted parameters: $PARAMS"
          echo "parameter_overrides=${PARAMS}" >> $GITHUB_ENV

      - name: Deploy CloudFormation Stack
        run: |
          echo "Starting CloudFormation deploy..."
          echo "Using parameters: ${{ env.parameter_overrides }}"
          aws cloudformation deploy \
            --debug \
            --template-file templates/template.yaml \
            --stack-name aws-batch-process-eventbridge-stack-${{ env.ENVIRONMENT }} \
            --parameter-overrides ${{ env.parameter_overrides }} \
            --capabilities CAPABILITY_NAMED_IAM

      - name: Debug environment
        run: env
